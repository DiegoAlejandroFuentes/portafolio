
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmMatrices extends javax.swing.JFrame {

    int n;
    int m;
    int i;
    int j;
    DefaultTableModel model = new DefaultTableModel();
    Boolean ban = false;

    public int getN() {
        return n;
    }

    public void setN(int n) {
        this.n = n;
    }

    public int getM() {
        return m;
    }

    public void setM(int m) {
        this.m = m;
    }

    public int getI() {
        return i;
    }

    public void setI(int i) {
        this.i = i;
    }

    public int getJ() {
        return j;
    }

    public void setJ(int j) {
        this.j = j;
    }

    /**
     * Creates new form frmMatrices
     */
    public frmMatrices() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/colombogr.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btngenerar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        filasA = new javax.swing.JLabel();
        columnasA = new javax.swing.JLabel();
        txtN = new javax.swing.JTextField();
        txtM = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtI = new javax.swing.JTextField();
        txtJ = new javax.swing.JTextField();
        multiplicacion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        sumar = new javax.swing.JButton();
        restar = new javax.swing.JButton();
        Ayuda = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SALIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 80, 30));

        btngenerar.setBackground(new java.awt.Color(0, 0, 0));
        btngenerar.setForeground(new java.awt.Color(255, 255, 255));
        btngenerar.setText("Generar");
        btngenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngenerarActionPerformed(evt);
            }
        });
        getContentPane().add(btngenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("  =");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, 70, 50));

        filasA.setBackground(new java.awt.Color(255, 255, 51));
        filasA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        filasA.setForeground(new java.awt.Color(255, 0, 0));
        filasA.setText("Numero de filas de A");
        getContentPane().add(filasA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 74, 130, 30));

        columnasA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        columnasA.setForeground(new java.awt.Color(255, 0, 0));
        columnasA.setText("Numero de columnas A");
        getContentPane().add(columnasA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 114, -1, 20));

        txtN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNActionPerformed(evt);
            }
        });
        getContentPane().add(txtN, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 30, -1));
        getContentPane().add(txtM, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 30, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Numero de filasde B");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 130, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Numero de columnas de B");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 160, -1));
        getContentPane().add(txtI, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 30, -1));

        txtJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJActionPerformed(evt);
            }
        });
        getContentPane().add(txtJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 30, -1));

        multiplicacion.setBackground(new java.awt.Color(255, 0, 51));
        multiplicacion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        multiplicacion.setText("x");
        multiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicacionActionPerformed(evt);
            }
        });
        getContentPane().add(multiplicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 50, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 140, 110));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 140, 110));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable3);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 250, 210));

        sumar.setBackground(new java.awt.Color(255, 255, 0));
        sumar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sumar.setText("+");
        sumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumarActionPerformed(evt);
            }
        });
        getContentPane().add(sumar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 50, 30));

        restar.setBackground(new java.awt.Color(0, 0, 255));
        restar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        restar.setText("-");
        restar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restarActionPerformed(evt);
            }
        });
        getContentPane().add(restar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 50, 30));

        Ayuda.setBackground(new java.awt.Color(255, 255, 51));
        Ayuda.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Ayuda.setForeground(new java.awt.Color(153, 153, 153));
        Ayuda.setText("AYUDA");
        Ayuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AyudaActionPerformed(evt);
            }
        });
        getContentPane().add(Ayuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 660, 90, 40));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/colombo.jpg"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNActionPerformed

    private void btngenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngenerarActionPerformed
        try {
            this.setN(Integer.parseInt(txtN.getText()));
            n = this.getN();
            this.m = Integer.parseInt(txtM.getText());
            m = this.getM();
            this.i = Integer.parseInt(txtI.getText());
            i = this.getI();
            this.j = Integer.parseInt(txtJ.getText());
            j = this.getJ();
            Object colA[] = new Object[m];
            model = new DefaultTableModel(colA, n);
            jTable1.setModel(model);

            model = new DefaultTableModel(i, j);
            jTable2.setModel(model);
          
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }

    }//GEN-LAST:event_btngenerarActionPerformed

    private void txtJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJActionPerformed

    private void multiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicacionActionPerformed

        try {

            int n = this.getN();
            int m = this.getM();
            int i = this.getI();
            int j = this.getJ();
            double A[][] = new double[n][m];
            double B[][] = new double[i][j];
            double C[][] = new double[n][j];
            if (m != i) {
                throw new Exception("Recuerde que el numero de columnas de A debe ser igual al numero de filas de B");
            } else {
                for (int x = 0; x < n; x++) {

                    for (int y = 0; y < m; y++) {
                        A[x][y] = Double.parseDouble(String.valueOf(jTable1.getValueAt(x, y)));

                    }
                }
                for (int x = 0; x < i; x++) {

                    for (int y = 0; y < j; y++) {
                        B[x][y] = Double.parseDouble(String.valueOf(jTable2.getValueAt(x, y)));

                    }
                }
                C = this.multiplicacion(A, B);

                this.MatrizC(C, n, j);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }


    }//GEN-LAST:event_multiplicacionActionPerformed

    private void sumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumarActionPerformed
        try {

            int n = this.getN();
            int m = this.getM();
            int i = this.getI();
            int j = this.getJ();
            double A[][] = new double[n][m];
            double B[][] = new double[i][j];
            double C[][] = new double[n][j];
            if (n != i || m != j) {
                throw new Exception("Recuerde que  las matrices deben tener el mismo tamaño para poder sumarlas");
            }
            for (int x = 0; x < n; x++) {

                for (int y = 0; y < m; y++) {
                    A[x][y] = Double.parseDouble(String.valueOf(jTable1.getValueAt(x, y)));

                }
            }
            for (int x = 0; x < i; x++) {

                for (int y = 0; y < j; y++) {
                    B[x][y] = Double.parseDouble(String.valueOf(jTable2.getValueAt(x, y)));

                }
            }
            C = this.sumar(A, B);

            this.MatrizC(C, n, j);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }


    }//GEN-LAST:event_sumarActionPerformed

    private void restarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restarActionPerformed
        try {

            int n = this.getN();
            int m = this.getM();
            int i = this.getI();
            int j = this.getJ();
            double A[][] = new double[n][m];
            double B[][] = new double[i][j];
            double C[][] = new double[n][j];
            if (n != i || m != j) {
                throw new Exception("Recuerde que  las matrices deben tener el mismo tamaño para poder restarlas");
            }

            for (int x = 0; x < n; x++) {

                for (int y = 0; y < m; y++) {
                    A[x][y] = Double.parseDouble(String.valueOf(jTable1.getValueAt(x, y)));

                }
            }
            for (int x = 0; x < i; x++) {

                for (int y = 0; y < j; y++) {
                    B[x][y] = Double.parseDouble(String.valueOf(jTable2.getValueAt(x, y)));

                }
            }
            C = this.restar(A, B);

            this.MatrizC(C, n, j);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());

        }


    }//GEN-LAST:event_restarActionPerformed

    private void AyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AyudaActionPerformed
        JOptionPane.showMessageDialog(rootPane, "\n\n\n =====Instrucciones===== \n\n"
                + "\t 1.)Ingrese el tamaño de las matrices y haga click sobre el boton generar. \n"
                + "\t 2.)En las tablas que se generan, rellene con los datos que desea operar. \n"
                + "\t 3.)Haga click sobre el boton de la operacion que desea realizar.\n\n\n\n"
                + "=====Consideraciones===== \n \n"
                + "\t 1.)Para sumar o restar, el tamaño de las matrices debe ser igual, es decir \n"
                + "que la cantidad de filas y oolumnas de A debe ser igual a la cantidad de filas \n"
                + "y columnas de B respectivamente. \n"
                + "\t 2.)Para multiplicar, el numero de columnas de A debe ser igual al numero de \n"
                + "filas de B. \n"
                + "\t 3.)Recuerde que debe ingresar unicamente valores numericos. \n"
                + "\t 4.)Al terminar de llenar una matriz debe oprimir la tecla ENTER, de lo contrario \n"
                + "el valor que se esta editando sera tomado como nulo y no se podra realizar la , \n"
                + "operacion, del mismo modo pasara con las casillas que no sean rellenadas. ");
    }//GEN-LAST:event_AyudaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMatrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMatrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMatrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMatrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMatrices().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ayuda;
    private javax.swing.JButton btngenerar;
    private javax.swing.JLabel columnasA;
    private javax.swing.JLabel filasA;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton multiplicacion;
    private javax.swing.JButton restar;
    private javax.swing.JButton sumar;
    private javax.swing.JTextField txtI;
    private javax.swing.JTextField txtJ;
    private javax.swing.JTextField txtM;
    private javax.swing.JTextField txtN;
    // End of variables declaration//GEN-END:variables

    private double[][] multiplicacion(double[][] A, double[][] B) {
        int n = this.getN();
        int m = this.getM();
        int i = this.getI();
        int j = this.getJ();
        double C[][] = new double[n][j];

        if (m == i) {
            for (int x = 0; x < n; x++) {
                for (int y = 0; y < j; y++) {
                    for (int z = 0; z < A[0].length; z++) {
                        C[x][y] += A[x][z] * B[z][y];

                    }
                }
            }
        }
        return C;
    }

    public void MatrizC(double matriz3[][], int n, int j) {
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(n);
        model.setColumnCount(j);
        for (int x = 0; x < n; x++) {
            for (int y = 0; y < j; y++) {
                jTable3.setValueAt(matriz3[x][y], x, y);
            }
        }
    }

    private double[][] sumar(double[][] A, double[][] B) {
        int n = this.getN();
        int m = this.getM();
        int i = this.getI();
        int j = this.getJ();
        double C[][] = new double[n][j];

        if (n == i && m == j) {
            for (int x = 0; x < n; x++) {
                for (int y = 0; y < j; y++) {

                    C[x][y] = A[x][y] + B[x][y];

                }
            }
        } else {
            System.out.println("error");
        }
        return C; //To change body of generated methods, choose Tools | Templates.
    }

    private double[][] restar(double[][] A, double[][] B) {
        int n = this.getN();
        int m = this.getM();
        int i = this.getI();
        int j = this.getJ();
        double C[][] = new double[n][j];

        if (n == i && m == j) {
            for (int x = 0; x < n; x++) {
                for (int y = 0; y < j; y++) {

                    C[x][y] = A[x][y] - B[x][y];

                }
            }
        }
        return C; //To change body of generated methods, choose Tools | Templates.
    }
}
